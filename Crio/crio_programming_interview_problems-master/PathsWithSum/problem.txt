You are given a binary tree in which each node contains an integer value (which
might be positive or negative). Design an algorithm to count the number of paths that sum to a
given value. The path does not need to start or end at the root or a leaf, but it must go downwards
(traveling only from parent nodes to child nodes).

Constraints
1 <= N <= 10^5
|val[i]| <= 10^9
|K| <= 10^9

==========
Example 1
==========
Input:
6
-1 0 0 1 1 2
4 6 -2 -4 -2 2
2

Output:
3

Explanation:
     4
   /   \
  6     -2
 / \   /
-4 -2 2


==========
Example 1
==========
Input:
11
-1 0 0 1 1 2 2 4 5 5 6
1 3 -1 2 1 4 5 1 1 2 6
5

Output:
8

Explanation:

Root of below binary tree:
           1
        /     \
      3        -1
    /   \     /   \
   2     1   4     5
        /   / \     \
       1   1   2     6

No of paths with sum equals to 5 are: 8
3 2
3 1 1
1 3 1
4 1
1 -1 4 1
-1 4 2
5
1 -1 5
