Problem Description
You are given a perfect binary tree where all leaves are on the same level, and every parent has two children. The binary tree has the following definition:

class Node {
    public int val;
    public Node left;
    public Node right;
    public Node next;
}

Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to NULL.

Initially, all next pointers are set to NULL.


Input format
T: T number of test cases will be given
In each test case: You will be given the root of the tree.

Output format
In each test case print n space separated values of next nodes. If nothing exists in the next print “null” without quotes.
Sample Input 1
7
1 2 3 4 5 6 7

Sample Output 1
null 3 null 5 6 7 null
Explanation 1
1 does not have any nodes at its right so it is pointing to null.
2 has 3 as its next node.
3 does not have any nodes at its right so it is pointing to null.
4  has 5 as its next node.
5  has 6 as its next node.
6  has 7 as its next node.
7 does not have any nodes at its right so it is pointing to null
Sample Input 2
1
7
1 2 5 9 10 14 15
1 2 3
2 4 5
3 6 7
4 -1 -1
5 -1 -1
6 -1 -1
7 -1 -1

Sample Output 2
null 5 null 10 14 15 null 

Explanation 2
It has been explained in detail in the explanation 1.
Constraints
1<=T<=100
1<=N<=100000
0 <= A[i] <= 10^9
It's guaranteed that the sum of Number of tree nodes for all test cases will be less than 500000.






