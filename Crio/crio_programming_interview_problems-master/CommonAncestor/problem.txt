Given a binary tree, find the lowest common ancestor (LCA) of two given nodes in the tree.

 LCA of two nodes is defined as : “The lowest common ancestor is defined between two nodes p and q as the lowest node in T that has both p and q as descendants (where we allow a node to be a descendant of itself).”


Input Format:
T: no of test cases given.
N: Number of tree nodes will be given.
You will be given the root of the tree which contains distinct values.
P,Q: Two integers whose LCA has to be found.


Output Format:
Print the lowest common ancestor of two nodes.

Constraints:
1<= T<= 1000
1<= N<= 10000
0 <= A[i] <= 10^9
1<= P,Q <= 10^9
It's guaranteed that sum of Number of tree nodes for all test cases will be less than 500000.

=========
Example 1
=========
Input:
1
5
2 3 7 8 9 
1 2 3
2 4 5
3 -1 -1
4 -1 -1
5 -1 -1
7 2


Output: 
2

Explanation: 
    2
   / \
  3   7
 / \
8   9
The LCA of 2 and 7 is 2.

=========
Example 2
=========
Input:
2
6
1 2 5 6 7 10 
1 2 3
2 4 5
3 6 -1
4 -1 -1
5 -1 -1
6 -1 -1
1 6
6
1 2 3 6 7 10 
1 2 3
2 4 5
3 6 -1
4 -1 -1
5 -1 -1
6 -1 -1
3 1

Output: 
1
1

Explanation of 1st test case:
	    1
	   / \
	  2   5
	 / \   \
	6   7	10 
	   
The LCA of 1 and 6 is 1.

Explanation of 2nd test case:
	    1
	   / \
	  2   3
	 / \   \
	6   7	10 
	   
The LCA of 1 and 3 is 1.
